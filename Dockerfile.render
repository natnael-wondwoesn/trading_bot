# Render-Optimized Dockerfile for 24/7 Trading Bot
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy requirements and install Python dependencies
COPY requirements_render.txt .
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements_render.txt

# Copy application code
COPY . .

# Create directories for temporary data and logs
RUN mkdir -p /app/logs /tmp/trading_data

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash --uid 1000 tradingbot \
    && chown -R tradingbot:tradingbot /app \
    && chmod +x /app/render_entrypoint.py

# Switch to non-root user
USER tradingbot

# Environment variables for production
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Render will provide the PORT environment variable
# Our app will use this instead of hardcoded 8080
EXPOSE $PORT

# Health check for Render (simplified)
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Use a custom entrypoint script for Render
CMD ["python", "render_entrypoint.py"] 